$grid-breakpoints: (
  xs: 0,
  sm: 320px,
  md: 576px,
  lg: 768px,
  xl: 992px
);

$spacers: (
  0: 0,
  1: 0.25rem,
  2: 0.5rem,
  3: 0.75rem,
  4: 1rem,
  5: 1.25rem,
);

$colors: (
  'orange': hsl(40, 100%, 55%),
);

$theme-colors: (
  'info': map-get($colors, 'orange'),
  'primary': lighten(map-get($colors, 'orange'), 15%),
);

$font-size-sm: 0.7rem;

$transition-base: all 0.15s ease-in-out;
$transition-fade: opacity 0.15s ease-in-out;

$navbar-dark-color: map-get($colors, 'orange');
$navbar-dark-active-color: $navbar-dark-color;

$navbar-padding-y: map-get($spacers, 3);

$nav-link-padding-x: 0;
$nav-link-padding-y: 0;

$navbar-nav-link-padding-x: 0;

$navbar-toggler-padding-x: 0;
$navbar-toggler-padding-y: 0;
$navbar-dark-toggler-border-color: transparent;

$modal-header-padding: 0;
$modal-footer-border-width: 0;

@import '~bootstrap/scss/bootstrap';

@mixin transition($properties...) {
  transition: $transition-base;
  @if length($properties) != 0 {
    transition-property: $properties;
  }
}

$tile-size: 6rem;

%angle {
  content: '∠';
}

%degree {
  content: '°';
}

%cross {
  @extend .d-inline-block, .align-middle, .font-weight-bold;

  content: '\d7';
  line-height: 1;
}

%element {
  stroke-width: 45;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke: currentColor;
  fill: none;
}

.flex-grow {
  flex-grow: 1 !important;
}

.interactive {
  cursor: pointer;

  &:focus,
  &:hover {
    @extend .text-info;

    outline: none;
  }
}

html,
body {
  @extend .d-flex, .flex-column, .h-100;

  font-size: 12px;

  @include media-breakpoint-up(md) {
    font-size: 14px;
  }

  @include media-breakpoint-up(lg) {
    font-size: 16px;
  }

  @include media-breakpoint-up(xl) {
    font-size: 18px;
  }
}

header {
  @extend .navbar, .navbar-expand-md, .navbar-dark, .bg-dark, .font-weight-bold;

  > .brand {
    @extend .navbar-brand, .text-uppercase;
    @include transition(text-shadow);

    transition-duration: 1s;
    letter-spacing: 0.1ch;

    &:focus,
    &:hover {
      text-shadow: 0 0 0.1rem currentColor, 0 0 0.5rem currentColor;
    }
  }

  > nav {
    @extend .navbar-nav, .d-flex, .flex-row, .my-auto, .ml-auto;

    .github {
      @extend .nav-link;

      line-height: 0;

      svg {
        @extend .align-bottom;
        @include size(2rem);

        fill: currentcolor;
      }
    }

    .toggler {
      @extend .navbar-toggler, .ml-4;

      &::after {
        @extend .navbar-toggler-icon;
      }
    }
  }
}

main {
  @extend .container-fluid, .d-flex, .flex-column, .flex-grow;

  > .row {
    @extend .d-flex, .flex-grow;

    > .col {
      @extend .d-flex, .flex-column, .flex-grow, .my-3;
    }
  }
}

footer {
  @extend .container-fluid, .mb-3;

  > .row {
    @extend .flex-grow;

    &::before {
      @extend .col-4, .d-none, .d-md-flex;

      content: '';
    }

    > .social {
      @extend .col-12, .col-sm-8, .col-md-4;
    }

    > .copyright {
      @extend .col-4, .d-none, .d-sm-inline-block, .text-muted, .text-right;

      @include media-breakpoint-up(md) {
        font-size: 0.9rem;
      }

      @include media-breakpoint-up(xl) {
        font-size: 0.8rem;
      }

      &::before {
        content: '©';
      }

      .year {
        @extend .d-none, .d-md-inline-block;
      }
    }
  }
}

.toolbox,
.schematics {
  overflow: auto;
  font-size: 0;
  white-space: nowrap;
}

.toolbox {
  @extend .d-none, .d-md-flex, .pb-1, .mb-2;

  &.show {
    @extend .d-flex;
  }

  > .toolbar {
    @extend .d-flex, .flex-row, .mx-auto;

    > .tool {
      @extend %element, .p-1, .border, .rounded, .interactive;
      @include transition(color, border-color);
      @include size(0.75 * $tile-size);

      &:hover,
      &:focus {
        @extend .border-highlight;
      }

      +.tool {
        @extend .ml-1;
      }
    }
  }
}

.schematics {
  @extend .d-flex, .flex-grow, .border, .rounded, .p-3;

  flex-basis: 0;

  .tile {
    @extend %element, .position-relative, .d-inline-block, .align-top;

    @include transition(color);
    @include size($tile-size);

    outline: none;

    &.connector::after {
      @extend .rounded, .position-absolute;
      @include transition(border-color);

      content: '';
      top: 10%;
      right: 10%;
      bottom: 10%;
      left: 10%;
      border: 0.15rem dashed transparent;
    }

    &.ground {
      margin-left: -$tile-size;
    }

    &.series {
      margin-left: $tile-size;
    }

    &.shunt {
      @extend .d-flex, .flex-column;

      height: auto;
      margin-bottom: -$tile-size;
    }

    &.active {
      color: theme-color('info');
    }

    &.active.connector::after,
    &.connector:focus::after,
    &.connector:hover::after {
      border-color: theme-color('info');
    }

    &.active,
    &.active.connector::after {
      animation: blink 1s ease-in-out infinite;
    }

    &:hover > .fade,
    &:focus > .fade,
    > .fade:focus {
      @extend .show;
    }

    > .control {
      @extend .position-absolute, .interactive, .text-secondary;
    }

    > .remove {
      top: 0;
      right: 0;

      &::after {
        @extend %cross, .text-right;
        @include size(1.2rem);

        font-size: 1rem;
      }
    }

    > .value {
      @extend .d-inline-block, .text-center, .font-weight-bold;

      right: 0;
      left: 0;
      font-size: $font-size-sm;
      line-height: 1.2;
    }

    &.vsrc > .value,
    &.impedance > .value {
      top: 36%;
    }

    &.line > .value.y {
      top: 67%;
    }

    &.isrc > .value,
    &.admittance > .value,
    &.xformer > .value,
    &.line > .value.z {
      top: 82%;
    }
  }
}

@keyframes blink {
  50% {
    border-color: transparent;
    color: unset;
  }
}

.quantity {
  > .ang {
    &::before {
      @extend %angle;
    }

    &::after {
      @extend %degree;
    }
  }

  > .prefix {
    margin: 0 -0.3ch 0 0.3ch;
  }

  > .unit {
    margin-left: 0.3ch;
  }

  > .prefix:not(.mono) + .unit.ratio {
    padding-left: 0.4ch;
  }
}

.prefix {
  &.femto::after {
    content: 'f';
  }

  &.pico::after {
    content: 'p';
  }

  &.nano::after {
    content: 'n';
  }

  &.micro::after {
    content: 'μ';
  }

  &.milli::after {
    content: 'm';
  }

  &.kilo::after {
    content: 'k';
  }

  &.mega::after {
    content: 'M';
  }

  &.giga::after {
    content: 'G';
  }

  &.tera::after {
    content: 'T';
  }

  &.peta::after {
    content: 'P';
  }
}

.unit {
  &.volt::after {
    content: 'V';
  }

  &.ampere::after {
    content: 'A';
  }

  &.ohm::after {
    content: 'Ω';
  }

  &.ratio::before {
    content: ':';
    margin-right: 0.3ch;
  }

  &.ratio::after {
    content: '1';
  }

  &.degree::after {
    @extend %degree;
  }
}

.symbol {
  &.angle::after {
    @extend %angle;
  }
}

.modal {
  .modal-header {
    @extend .pb-2;

    .modal-title {
      @extend .text-capitalize;
    }

    .close {
      @extend .interactive;

      &::after {
        @extend %cross;
      }
    }
  }

  .modal-content {
    @extend .p-4;

    .modal-body {
      @extend .d-flex, .align-items-center, .px-0;

      min-height: 6rem;
    }
  }

  .modal-footer {
    @extend .p-0;

    .btn {
      min-width: 15%;
    }
  }
}

.modal,
.modal-backdrop {
  @extend .fade, .d-block, .invisible;

  transition-property: visibility, opacity;

  &.show {
    @extend .visible;
  }
}
