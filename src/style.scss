$grid-breakpoints: (
  xs: 0,
  sm: 320px,
  md: 576px,
  lg: 768px,
  xl: 992px
);

$colors: (
  'highlight': hsl(40, 100%, 55%),
);

$theme-colors: (
  'primary': lighten(map-get($colors, 'highlight'), 15%),
);

@import '~bootstrap/scss/bootstrap';

$tile-size: 6rem;

%cross {
  @extend .d-block;

  content: '\d7';

  width: 1em;
  height: 1em;
  font-weight: bold;
  line-height: 1em;
  text-align: center;
}

.flex-grow {
  flex-grow: 1 !important;
}

html,
body {
  @extend .d-flex, .flex-column, .h-100;

  font-size: 12px;

  @include media-breakpoint-up(md) {
    font-size: 14px;
  }

  @include media-breakpoint-up(lg) {
    font-size: 16px;
  }

  @include media-breakpoint-up(xl) {
    font-size: 18px;
  }
}

header {
  @extend .navbar, .navbar-expand-md, .navbar-dark, .bg-dark;

  > .brand {
    @extend .navbar-brand;
  }

  > nav {
    @extend .navbar-nav, .d-flex, .flex-row, .my-auto, .ml-auto;

    .github {
      @extend .nav-link, .p-0;

      line-height: 0;

      .label {
        @extend .d-none, .d-md-inline-block;

        margin-right: 0.5ch;
      }

      svg {
        width: 2.5rem;
        height: 2.5rem;
        fill: currentcolor;

        @include media-breakpoint-up(md) {
          width: 1.25rem;
          height: 1.25rem;
          vertical-align: text-bottom;
        }
      }
    }

    .toggler {
      @extend .navbar-toggler, .p-1, .ml-3;

      &::after {
        @extend .navbar-toggler-icon;
      }
    }
  }
}

main {
  @extend .container-fluid, .d-flex, .flex-column, .flex-grow;

  > .row {
    @extend .d-flex, .flex-grow;

    > .col {
      @extend .d-flex, .flex-column, .flex-grow, .py-3;
    }
  }
}

footer {
  @extend .container-fluid, .d-flex, .flex-row, .align-items-center, .justify-content-center, .mb-3;

  > .row {
    @extend .flex-grow;

    &::before {
      @extend .col-4, .d-none, .d-md-flex;

      content: '';
    }

    > nav {
      @extend .col-12, .col-sm-8, .col-md-4, .d-flex, .justify-content-md-center, .align-items-center;

      .github-btn {
        width: 90px;
        height: 20px;
      }
    }

    > .copyright {
      @extend .col-4, .d-none, .d-sm-inline-block, .text-right, .text-muted, .text-nowrap;

      @include media-breakpoint-up(md) {
        font-size: 0.9rem;
      }

      @include media-breakpoint-up(xl) {
        font-size: 0.8rem;
      }

      &::before {
        content: '©';
      }

      .year {
        @extend .d-none, .d-md-inline-block;
      }
    }
  }
}

.toolbox,
.schematics {
  overflow: auto;
  font-size: 0;
  white-space: nowrap;
}

.toolbox {
  @extend .d-none, .d-md-flex, .pb-1, .mb-2;

  &.show {
    @extend .d-flex;
  }

  > .toolbar {
    @extend .d-flex, .flex-row, .mx-auto;

    > .tool {
      @extend .p-1, .rounded;
      @include transition();

      position: relative;
      width: 0.75 * $tile-size;
      height: 0.75 * $tile-size;
      transition-property: color, border-color;
      border: 1px solid $border-color;
      cursor: pointer;

      &:hover,
      &:focus {
        border-color: color('highlight');
        outline: none;
        color: color('highlight');
      }

      +.tool {
        @extend .ml-1;
      }
    }
  }
}

.schematics {
  @extend .d-flex, .flex-grow, .border, .rounded, .p-3;

  flex-basis: 0;

  .tile {
    @include transition();

    display: inline-block;
    position: relative;
    width: $tile-size;
    height: $tile-size;
    transition-property: color;
    outline: none;
    vertical-align: top;

    &.connector::after {
      @extend .rounded;
      @include transition();

      content: '';
      position: absolute;
      top: 10%;
      right: 10%;
      bottom: 10%;
      left: 10%;
      transition-property: border-color;
      border: 0.15rem dashed transparent;
    }

    &.ground {
      margin-left: -$tile-size;
    }

    &.series {
      margin-left: $tile-size;
    }

    &.shunt {
      @extend .d-flex;
      @extend .flex-column;

      height: auto;
      margin-bottom: -$tile-size;
    }

    &.interactive {
      cursor: pointer;
    }

    &.active,
    &.interactive:focus,
    &.interactive:hover {
      color: color('highlight');
      filter: url('#glow');
    }

    &.active.connector::after,
    &.interactive.connector:focus::after,
    &.interactive.connector:hover::after {
      border-color: color('highlight');
      filter: drop-shadow(0 0 0.2rem rgba(color('highlight'), 0.2));
    }

    &.active,
    &.active.connector::after {
      animation: blinking 1s ease-in-out infinite;
    }

    > .control {
      color: theme-color('secondary');
      cursor: pointer;

      &:focus,
      &:hover {
        outline: none;
        color: color('highlight');
      }
    }

    &:not(:hover, :focus) > .control:not(:focus) {
      opacity: 0;
    }

    > .remove {
      @include transition($transition-fade);

      position: absolute;
      top: 0;
      right: 0;

      &::after {
        @extend %cross;

        font-size: 1rem;
      }
    }

    > .value {
      @extend .d-flex, .text-muted, .justify-content-center;

      position: absolute;
      right: 0;
      left: 0;
      font-size: 0.7rem;
      font-weight: bold;
      line-height: 1.2;
    }

    &.vsrc > .value,
    &.impedance > .value {
      top: 36%;
    }

    &.line > .value.y {
      top: 67%;
    }

    &.isrc > .value,
    &.admittance > .value,
    &.xformer > .value,
    &.line > .value.z {
      top: 82%;
    }
  }
}

@keyframes blinking {
  50% {
    border-color: transparent;
    color: unset;
  }
}

.quantity {
  > .ang {
    &::before {
      content: '∠';
      font-size: 0.8em;
    }

    &::after {
      content: '°';
    }
  }

  > .prefix {
    margin: 0 -0.3ch 0 0.3ch;

    &.femto::after {
      content: 'f';
    }

    &.pico::after {
      content: 'p';
    }

    &.nano::after {
      content: 'n';
    }

    &.micro::after {
      content: 'μ';
    }

    &.milli::after {
      content: 'm';
    }

    &.kilo::after {
      content: 'k';
    }

    &.mega::after {
      content: 'M';
    }

    &.giga::after {
      content: 'G';
    }

    &.tera::after {
      content: 'T';
    }

    &.peta::after {
      content: 'P';
    }
  }

  > .unit {
    margin-left: 0.3ch;

    &.volt::after {
      content: 'V';
    }

    &.ampere::after {
      content: 'A';
    }

    &.ohm::after {
      content: 'Ω';
    }

    &.ratio::before {
      content: ':';
      margin-right: 0.3ch;
    }

    &.ratio::after {
      content: '1';
    }
  }

  > .prefix:not(.mono) + .unit.ratio {
    padding-left: 0.4ch;
  }
}
