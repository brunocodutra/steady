$grid-breakpoints: (
  xs: 0,
  sm: 320px,
  md: 576px,
  lg: 768px,
  xl: 992px
);

@import '~bootstrap/scss/bootstrap';

$tile: 6rem;
$highlight: #ffa500;
$timing: 150ms;

* {
    flex-shrink: 0;
}

html {
    font-size: 12px;

    @include media-breakpoint-up(md) {
        font-size: 14px;
    }

    @include media-breakpoint-up(lg) {
        font-size: 16px;
    }

    @include media-breakpoint-up(xl) {
        font-size: 18px;
    }
}

html, body {
    @extend .d-flex;
    @extend .flex-column;
    @extend .h-100;
}

.flex-grow {
    flex-grow: 1;
}

.interactive {
    cursor: pointer;
}

svg.github {
    width: 2.5rem;
    height: 2.5rem;
    fill: currentcolor;

    @include media-breakpoint-up(md) {
        width: 1.25rem;
        height: 1.25rem;
        vertical-align: text-bottom;
    }
}

.github-btn {
    height: 20px;
    width: 90px;
}

.copyright {
    @include media-breakpoint-up(md) {
        font-size: .9rem;
    }

    @include media-breakpoint-up(xl) {
        font-size: .8rem;
    }
}

.board {
    font-size: 0;
    overflow: auto;
    flex-basis: 0;
    white-space: nowrap;
}

.tool {
    @extend .p-1;
    @extend .border;
    @extend .rounded;
    @extend .interactive;

    width: 0.75*$tile;
    height: 0.75*$tile;
    position: relative;
    transition-property: color, border-color;
    transition-timing-function: ease-in-out;
    transition-duration: $timing;

    &:hover, &:focus {
        outline: none !important;
        color: $highlight;
        border-color: rgba($highlight, .8) !important;
    }

    +.tool {
        @extend .ml-1;
    }
}

.schematics {
    background-color: white;
}

.tile {
    width: $tile;
    height: $tile;
    position: relative;
    display: inline-block;
    vertical-align: top;
    outline: none !important;
    transition: color ease-in-out $timing;

    &.connector:after {
        @extend .rounded;

        content: '';
        position: absolute;
        top: 10%;
        right: 10%;
        bottom: 10%;
        left: 10%;
        border: .15rem dashed transparent;
        transition: border-color ease-in-out $timing;
    }

    &.active, &.interactive:focus, &.interactive:hover {
        color: $highlight;
    }

    &.active.connector:after, &.interactive.connector:focus:after, &.interactive.connector:hover:after {
        border-color: rgba($highlight, .7);
    }

    &.active, &.active.connector:after {
        animation: blinking 1s ease-in-out infinite;
    }

    &.shunt {
        @extend .d-flex;
        @extend .flex-column;

        height: auto;
        padding-bottom: $tile;
        margin-bottom: -$tile;
    }

    &.ground, &.knee, &.wire {
        z-index: -1;
    }
}

@keyframes blinking {
    50% {
        color: unset;
        border-color: transparent;
    }
}

.value {
    @extend .d-flex;
    @extend .text-muted;
    @extend .justify-content-center;

    position: absolute;
    left: 0;
    right: 0;

    font-size: .7rem;
    font-weight: bold;
    line-height: 1.2em;
}

.vsrc, .impedance {
    .value {
        top: 40%;
    }
}

.isrc, .admittance, .xformer {
    .value {
        top: 85%;
    }
}

.line {
    .value {
        top: 80%;
    }
}

.phasor {
    .ang {
        &:before {
            content: '∠';
        }

        &:after {
            content: '°';
        }
    }
}

.unit {
    margin-left: 0.35em;

    &.volt:after {
        content: 'V';
    }

    &.ampere:after {
        content: 'A';
    }

    &.ohm:after {
        content: 'Ω';
    }

    &.ratio:after {
        content: ': 1';
    }
}

.prefix {
    margin: 0 -0.35em 0 0.35em;

    &.femto:after {
        content: 'f';
    }

    &.pico:after {
        content: 'p';
    }

    &.nano:after {
        content: 'n';
    }

    &.micro:after {
        content: 'μ';
    }

    &.milli:after {
        content: 'm';
    }

    &.kilo:after {
        content: 'k';
    }

    &.mega:after {
        content: 'M';
    }

    &.giga:after {
        content: 'G';
    }

    &.tera:after {
        content: 'T';
    }

    &.peta:after {
        content: 'P';
    }
}
